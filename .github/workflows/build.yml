---
name: Build

on:
  pull_request:
  push:
    branches:
      - master
#  schedule:
#    - cron: "10 1 * * 0"

jobs:
  # Build root.tar using Raspberry Pi OS Image file
  prepare:
    name: Prepare
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Get img file and prepare tar
        run: sudo ./img_to_tar.sh

      - name: Upload output file
        uses: actions/upload-artifact@v2
        with:
          name: root-tar
          path: root.tar
          retention-days: 2

  # Test the image builds and works correctly.
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: prepare

    steps:
      - uses: actions/checkout@v2

      - name: Install qemu-user-static
        run: sudo apt-get install -y qemu-user-static

      - name: Download artifact - root.tar
        uses: actions/download-artifact@v2
        with:
          name: root-tar

      - name: Test building image.
        run: docker build -t docker-ansible .

      - name: Run the built image.
        run: docker run --name test-container -d --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro docker-ansible

      - name: Verify Ansible is accessible in the built image.
        run: docker exec --tty test-container env TERM=xterm ansible --version

  # If on master branch, build and release image.
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v2

      - name: Download artifact - root.tar
        uses: actions/download-artifact@v2
        with:
          name: root-tar

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image.
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: Dockerfile
          # Platform Specifiers: https://github.com/containerd/containerd/blob/v1.4.3/platforms/platforms.go#L63
          platforms: linux/arm
          push: true
          tags: ${{ github.repository }}:latest
